https://github.com/ManjDesp/sqlscripts.git
------------------------------------------------------------------------------------
* TO CREATE DATABASE
------------------------------------------------------------------------------------

SYNTAX:		CREATE DATABASE DATABASE_NAME;

EX:			CREATE DATABASE testDB;
------------------------------------------------------------------------------------
* TO DROP DATABASE
------------------------------------------------------------------------------------

SYNTAX:		DROP DATABASE DATABASE_NAME;

EG:			DROP DATABASE testDB;
--------------------------------------------------------------------------------------
* BACKUP DATABASE: Statement is used in SQL Server to create a full back up of an existing SQL database.
------------------------------------------------------------------------------------

SYNTAX:		BACKUP DATABASE databasename TO DISK = 'filepath';

EG :1:		BACKUP DATABASE testDB TO DISK = 'C:\MyDatabase';

ERROR:		Msg 3201, Level 16, State 1, Line 1
			Cannot open backup device 'C:\MyDatabase'. Operating system error 5(Access is denied.).
			Msg 3013, Level 16, State 1, Line 1
			BACKUP DATABASE is terminating abnormally.

			Completion time: 2022-10-05T08:29:19.1712701+05:30

EG :2:		BACKUP DATABASE testDB TO DISK = 'D:\RECYCLE BIN EXTRAS\CSHARP';

ERROR:		Msg 3201, Level 16, State 1, Line 1
			Cannot open backup device 'D:\RECYCLE BIN EXTRAS\CSHARP'. Operating system error 5(Access is denied.).
			Msg 3013, Level 16, State 1, Line 1
			BACKUP DATABASE is terminating abnormally.

			Completion time: 2022-10-05T08:32:54.4461566+05:30
------------------------------------------------------------------------------------
* BACKUP WITH DIFFERENTIAL:
------------------------------------------------------------------------------------

SYNTAX:		BACKUP DATABASE databasename TO DISK = 'filepath'
			WITH DIFFERENTIAL;

EX:			BACKUP DATABASE testDB TO DISK = 'D:\RECYCLE BIN EXTRAS\CSHARP\MyDatabase\mydata.bak'
			WITH DIFFERENTIAL;

ERROR:		Msg 3035, Level 16, State 1, Line 1
			Cannot perform a differential backup for database "testDB", 
			because a current database backup does not exist. 
			Perform a full database backup by reissuing BACKUP DATABASE, omitting the WITH DIFFERENTIAL option.
			Msg 3013, Level 16, State 1, Line 1
			BACKUP DATABASE is terminating abnormally.

			Completion time: 2022-10-05T08:38:24.0044830+05:30

POINTS:	  * A differential back up reduces the back up time (since only the changes are backed up)
------------------------------------------------------------------------------------
* TO CREATE TABLE:
------------------------------------------------------------------------------------

SYNTAX:		CREATE TABLE table_name (
				column1 datatype,
				column2 datatype,
				column3 datatype,
				....
			);

COLUMN PARAMETERS:   

Specify the names of the columns of the table.

DATATYPE PARAMETERS:

Specifies the type of data the column can hold.(e.g. varchar, integer, date, etc.)  

EX:			CREATE TABLE testdata(
				testid	 int,
				testna	 varchar(50),
				tesla	 varchar(50),
				address  varchar(200),
				city	 varchar(30)
			);
------------------------------------------------------------------------------------
* TO CREATE TABLE USING ANOTHER TABLE
------------------------------------------------------------------------------------

SYNTAX:		CREATE TABLE new_table_name AS
			SELECT column1, column2,...
			FROM existing_table_name
			WHERE ....;

EX:			CREATE TABLE dbtestdata AS
			SELECT testna,city
			FROM testdata;
			

ERROR 1:	Msg 156, Level 15, State 1, Line 2 Incorrect syntax near the keyword 'SELECT'.
			Completion time: 2022-10-05T09:03:53.5574359+05:30

ERROR 2:	Incorrect Syntax near 'SELECT'.Expecting EDGE_TYPE or FILETABLE.
------------------------------------------------------------------------------------
* TO DROP TABLE
------------------------------------------------------------------------------------

SYNTAX:		DROP TABLE table_name;

EX:			DROP TABLE testdata;
------------------------------------------------------------------------------------
* TO TRUNCATE TABLE
------------------------------------------------------------------------------------

SYNTAX:		TRUNCATE TABLE table_name;

EX:			TRUNCATE TABLE testdata;
------------------------------------------------------------------------------------
* TO INSERT INTO TABLE
------------------------------------------------------------------------------------

*  It is possible to write the INSERT INTO statement in two ways:

1: Specify both the column names and the values to be inserted:
--------------------------------------------------------------------
	* SYNTAX:		INSERT INTO table_name (column1, column2, column3, ...)
					VALUES (value1, value2, value3, ...);

	* EX 1:			INSERT INTO testdata(testid,testna,tesla,address,city)
					VALUES (1,'Manoj','MJ','Thygarajnagar','Bangalore Rural');

					INSERT INTO testdata(testid,testna,tesla,address,city)
					VALUES (2,'Rahul','RJ','Shivajinagar','Bangalore Urban');

	* EX 2:			INSERT INTO testdata(testid,testna,city)
					VALUES (3,'Ravikanth','Shimoga');

				 -- THE OTHER FIELDS WILL BE NULL.


2: If you are adding values for all the columns of the table, you do not need to specify the column names in the
   SQL query. However, make sure the order of the values is in the same order as the columns in the table.
----------------------------------------------------------------------
	* SYNTAX:		INSERT INTO table_name
					VALUES (value1, value2, value3, ...);

	* EX:			INSERT INTO testdata
					VALUES (1,'Manoj','MJ','Thygarajnagar','Bangalore Rural');

					INSERT INTO testdata
					VALUES (2,'Rahul','RJ','Shivajinagar','Bangalore Urban');

					INSERT INTO testdata
					VALUES (3,'Ravikanth','RA','Magadi Road','Tumkur');

					INSERT INTO testdata
					VALUES (4,'Raja','RAJ','Indian Gall Express','Mumbai');

					INSERT INTO testdata
					VALUES (5,'Sahegal','SAL','North ISI','Hyderbad');
------------------------------------------------------------------------------------
* TO TRUNCATE TABLE: It is used to delete the data inside a table, but not the table itself.
------------------------------------------------------------------------------------

SYNTAX:		TRUNCATE TABLE table_name;

EX:			TRUNCATE TABLE testdata;
------------------------------------------------------------------------------------
* TO ALTER TABLE: 
------------------------------------------------------------------------------------

* It is used to add, delete, or modify columns in an existing table.

* It is also used to add and drop various constraints on an existing table.


1: ALTER TABLE - ADD Column
--------------------------------------------------------------------
	* SYNTAX:		ALTER TABLE table_name ADD column_name datatype;

	* EX	:		ALTER TABLE testdata ADD temail varchar(100);

2: ALTER TABLE - DROP Column
--------------------------------------------------------------------
	* SYNTAX:		ALTER TABLE table_name
					DROP COLUMN column_name;

	* EX	:		ALTER TABLE testdata
					DROP COLUMN address;

3: ALTER TABLE - ALTER/MODIFY COLUMN : To change the data type of a column in a table :(THIS IS FOR MS-SQL)
--------------------------------------------------------------------
	* SYNTAX:		ALTER TABLE table_name
					ALTER COLUMN column_name datatype;

	* EX	:		ALTER TABLE testdata ADD tdate varchar(100);

					ALTER TABLE testdata
					ALTER COLUMN tdate date;
------------------------------------------------------------------------------------
* TO CREATE CONSTRAINTS: 
------------------------------------------------------------------------------------

* SQL constraints are used to specify rules for the data in a table.

* Used to limit the type of data that can go into a table.This ensures the accuracy and reliability of the 
  data in the table.

* If there is any violation between the constraint and the data action::The action is aborted.

* It can be column level or table level.

* Column level constraints: Apply to a column :: Table level constraints : Apply to the whole table.

* CONSTRAINTS:
---------------
1:NOT NULL:		Ensures that a column cannot have a NULL value

2:
------------------------------------------------------------------------------------